{"version":3,"sources":["useMIDIInput.js","InputStateContext.js","use-derived-state.js","getAngleFromIndex.js","components/constants.js","components/NoteArcs.js","components/CoFNoteText.js","components/KeyCenterArc.js","components/CirlceOfFifthsViz.js","components/DevControls.js","ThemeContext.js","App.js","index.js"],"names":["MIDI_MSG_TYPES","getNoteObjectFromMidiNumber","noteNum","noteName","octave","Math","floor","preProcessMIDIMessage","msg","handleMIDINoteUpdate","data","commandType","velocity","undefined","noteIsBeingReleased","useMIDIInput","useEffect","navigator","requestMIDIAccess","then","midiAccess","inputs","values","onmidimessage","connectToMIDI","DEFAULT_INPUT_STATE","bassNote","trebleNotes","trebleMin","trebleMax","InputStateContext","createContext","useBassNote","useContext","inputState","useTrebleNotes","useTrebleExtent","useUpdateInputState","updateInputState","InputStateContextProvider","children","useImmer","note","isBassNote","draft","filter","push","Provider","value","SCALE_NOTES_BY_KEY","C","G","D","A","E","B","Ab","Eb","Bb","F","A_FULL_KEY_ANGLE","PI","getStartAndEndAngles","keysInKeyCenter","angles","map","keyName","getAngleFromIndex","CIRCLE_NOTES_DATA_BY_NOTE","fifthsIndex","length","anglesVisuallyOrdered","sorted","sort","biggerThanIncrementGapFound","noGapsBetweenAngles","angle","index","precedent","round","getVisualOrderedAngles","startAngle","min","endAngle","max","useKeyCenterArcAngles","allInputNotes","Object","keys","scaleNotes","some","inputNote","includes","useKeysInKeyCenter","chromaticIndex","KEY_NAME_RADIUS","CANVAS_HEIGHT","CANVAS_WIDTH","COLORS","CIRCLE_NOTES_DATA","d","radius","addJitter","pointRadial","x","y","jitter","random","getCoordsFromIndex","color","KEY_INDEXES","range","noteAngleBandScale","scaleBand","domain","paddingInner","paddingOuter","arcGenerator","d3arc","SingleNoteArcForAKeyPath","styled","path","theme","noteIssSelectedButNotInKey","highlights","hot","bright","SingleNoteArcForAKey","noteIndex","innerRadius","outerRadius","selected","trebleNote","keyNoteName","noteIsInThisKey","opacity","useNoteStyle","bandwidth","getNoteStartAndEndAngles","arcD","transform","NoteArcsForASingleNote","noteRadiusBandScale","useNoteRadii","NoteArcs","noteNums","CoFNoteText","text","primary","medium","CoFLetters","onClick","KEY_CENTER_ARC_OUTER_RADIUS","KEY_CENTER_ARC_INNER_RADIUS","StyledPath","rotation","KeyCenterArc","useTheme","fill","secondary","cool","SVGContainer","svg","neutral","dark","CircleOfFifthsViz","height","width","SAMPLE_TREBLE_NOTES","SAMPLE_BASS_NOTES","DevControls","useState","trebleIndex","setTrebledIndex","bassIndex","setBassIndex","SubTitle","i","style","toString","GlobalStyle","createGlobalStyle","light","DEFAULT_THEME","ThemeContext","HeaderText","h1","h3","BlueHighlightedText","span","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e01c760d.chunk.js","sourcesContent":["import { useEffect } from 'react'\n\nconst MIDI_MSG_TYPES = {\n  activeSensing: 254,\n}\n\nexport const getNoteObjectFromMidiNumber = (noteNum) => {\n  const note_names = [\n    'C',\n    'C#',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'Ab',\n    'A',\n    'Bb',\n    'B',\n  ]\n  const noteName = note_names[noteNum % 12]\n  const octave = Math.floor(noteNum / 12 - 1)\n  return { noteName, octave, noteNum: noteNum }\n}\n\nconst preProcessMIDIMessage = (msg, handleMIDINoteUpdate) => {\n  const [commandType, noteNum, velocity] = msg.data || []\n  if (noteNum === undefined || commandType === MIDI_MSG_TYPES.activeSensing) {\n    return\n  }\n\n  const noteIsBeingReleased = velocity === 0\n  handleMIDINoteUpdate(\n    getNoteObjectFromMidiNumber(noteNum),\n    noteIsBeingReleased,\n  )\n}\n\nconst connectToMIDI = (handleMIDINoteUpdate) => {\n  navigator.requestMIDIAccess().then(onMIDISuccess)\n\n  function onMIDISuccess(midiAccess) {\n    for (var input of midiAccess.inputs.values())\n      input.onmidimessage = (msg) =>\n        preProcessMIDIMessage(msg, handleMIDINoteUpdate)\n  }\n}\n\nconst useMIDIInput = (handleMIDINoteUpdate) => {\n  useEffect(() => {\n    connectToMIDI(handleMIDINoteUpdate)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n}\n\nexport default useMIDIInput\n","import { createContext, useContext } from 'react'\nimport { useImmer } from 'use-immer'\nimport useMIDIInput from './useMIDIInput'\n\nconst DEFAULT_INPUT_STATE = {\n  // bassNote: { noteName: 'F', octave: 3, noteNum: 53 },\n  // trebleNotes: [{ noteName: 'F', octave: 5, noteNum: 77 }],\n  bassNote: null,\n  trebleNotes: [],\n  trebleMin: { noteName: 'A', octave: 4, noteNum: 69 },\n  trebleMax: { noteName: 'A', octave: 5, noteNum: 81 },\n}\n\nconst InputStateContext = createContext({})\n\nexport const useBassNote = () => {\n  const {\n    inputState: { bassNote },\n  } = useContext(InputStateContext)\n  return bassNote || {}\n}\nexport const useTrebleNotes = () => {\n  const {\n    inputState: { trebleNotes },\n  } = useContext(InputStateContext)\n  return trebleNotes\n}\n\nexport const useTrebleExtent = () => {\n  const {\n    inputState: { trebleMin, trebleMax },\n  } = useContext(InputStateContext)\n  return { trebleMin, trebleMax }\n}\n\nexport const useUpdateInputState = () => {\n  const { updateInputState } = useContext(InputStateContext)\n  return updateInputState\n}\n\nconst InputStateContextProvider = ({ children }) => {\n  const [inputState, updateInputState] = useImmer(DEFAULT_INPUT_STATE)\n  const handleMIDINoteUpdate = (note, noteIsBeingReleased) => {\n    const isBassNote = note.noteNum < inputState.trebleMin.noteNum\n    if (isBassNote) {\n      updateInputState((draft) => {\n        if (noteIsBeingReleased) {\n          if (note.noteNum === (draft.bassNote || {}).noteNum)\n            draft.bassNote = null\n        } else {\n          draft.bassNote = note\n        }\n      })\n    } else {\n      updateInputState((draft) => {\n        if (noteIsBeingReleased) {\n          draft.trebleNotes = draft.trebleNotes.filter(\n            ({ noteNum }) => noteNum !== note.noteNum,\n          )\n        } else {\n          draft.trebleNotes.push(note)\n        }\n      })\n    }\n  }\n\n  useMIDIInput(handleMIDINoteUpdate)\n\n  return (\n    <InputStateContext.Provider value={{ inputState, updateInputState }}>\n      {children}\n    </InputStateContext.Provider>\n  )\n}\n\nexport default InputStateContextProvider\n","import { CIRCLE_NOTES_DATA_BY_NOTE } from './components/constants'\nimport { getAngleFromIndex } from './getAngleFromIndex'\nimport { useBassNote, useTrebleNotes } from './InputStateContext'\n\nexport const SCALE_NOTES_BY_KEY = {\n  C: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n  G: ['C', 'D', 'E', 'F#', 'G', 'A', 'B'],\n  D: ['C#', 'D', 'E', 'F#', 'G', 'A', 'B'],\n  A: ['C#', 'D', 'E', 'F#', 'Ab', 'A', 'B'],\n  E: ['C#', 'Eb', 'E', 'F#', 'Ab', 'A', 'B'],\n  B: ['C#', 'Eb', 'E', 'F#', 'Ab', 'Bb', 'B'],\n  'F#': ['C#', 'Eb', 'F', 'F#', 'Ab', 'Bb', 'B'],\n  'C#': ['C#', 'Eb', 'F', 'F#', 'Ab', 'Bb', 'C'],\n  Ab: ['C#', 'Eb', 'F', 'G', 'Ab', 'Bb', 'C'],\n  Eb: ['D', 'Eb', 'F', 'G', 'Ab', 'Bb', 'C'],\n  Bb: ['D', 'Eb', 'F', 'G', 'A', 'Bb', 'C'],\n  F: ['D', 'E', 'F', 'G', 'A', 'Bb', 'C'],\n}\n\nexport const A_FULL_KEY_ANGLE = (2 * Math.PI) / 12\nexport const useKeysInKeyCenter = () => {\n  // 1. get state info we need\n  const bassNote = useBassNote()\n  const trebleNotes = useTrebleNotes()\n  const allInputNotes = [\n    ...trebleNotes.map(({ noteName }) => noteName),\n    ...(bassNote.noteName ? [bassNote.noteName] : []),\n  ]\n  // 2. determine overlap between input notes & different keys\n  const keysInKeyCenter = Object.keys(SCALE_NOTES_BY_KEY).filter((keyName) => {\n    const scaleNotes = SCALE_NOTES_BY_KEY[keyName]\n    const someInputNoteIsNotInTheScale = !allInputNotes.some(\n      (inputNote) => !scaleNotes.includes(inputNote),\n    )\n    return someInputNoteIsNotInTheScale\n  })\n  return keysInKeyCenter\n}\n\nconst getVisualOrderedAngles = (angles) => {\n  const sorted = [...angles].sort()\n  let biggerThanIncrementGapFound = false\n  const noGapsBetweenAngles = sorted.map((angle, index) => {\n    const precedent = sorted[index - 1]\n\n    if (\n      precedent !== undefined &&\n      Math.round(100 * (angle - precedent)) > Math.round(100 * A_FULL_KEY_ANGLE)\n    ) {\n      biggerThanIncrementGapFound = true\n    }\n    return biggerThanIncrementGapFound ? angle - 2 * Math.PI : angle\n  })\n  return [...noGapsBetweenAngles].sort()\n}\nconst getStartAndEndAngles = (keysInKeyCenter) => {\n  const angles = keysInKeyCenter.map((keyName) =>\n    getAngleFromIndex(CIRCLE_NOTES_DATA_BY_NOTE[keyName].fifthsIndex),\n  )\n  if (!angles.length) {\n    return {}\n  }\n  const anglesVisuallyOrdered = getVisualOrderedAngles(angles)\n  const startAngle = Math.min(...anglesVisuallyOrdered) - A_FULL_KEY_ANGLE / 2\n  const endAngle = Math.max(...anglesVisuallyOrdered) + A_FULL_KEY_ANGLE / 2\n  return { startAngle, endAngle }\n}\n\nexport const useKeyCenterArcAngles = () => {\n  const keysInKeyCenter = useKeysInKeyCenter()\n  return getStartAndEndAngles(keysInKeyCenter)\n}\n","import { pointRadial } from 'd3-shape'\nimport {\n  CANVAS_HEIGHT,\n  CANVAS_WIDTH,\n  KEY_NAME_RADIUS,\n} from './components/constants'\nimport { A_FULL_KEY_ANGLE } from './use-derived-state'\n\nexport const getAngleFromIndex = (index) => {\n  return A_FULL_KEY_ANGLE * index\n}\n\nexport const getCoordsFromIndex = (\n  index,\n  radius = KEY_NAME_RADIUS,\n  addJitter = false,\n) => {\n  const angle = getAngleFromIndex(index)\n\n  const [x, y] = pointRadial(angle, radius)\n  const jitter = addJitter ? Math.random() * 16 : 0\n  return [x + CANVAS_WIDTH / 2 + jitter, y + CANVAS_HEIGHT / 2 + jitter]\n}\n","import { getCoordsFromIndex } from '../getAngleFromIndex'\n\nexport const CIRCLE_NOTES_DATA_BY_NOTE = {\n  C: { noteName: 'C', fifthsIndex: 0, chromaticIndex: 0 },\n  G: { noteName: 'G', fifthsIndex: 1, chromaticIndex: 7 },\n  D: { noteName: 'D', fifthsIndex: 2, chromaticIndex: 2 },\n  A: { noteName: 'A', fifthsIndex: 3, chromaticIndex: 9 },\n  E: { noteName: 'E', fifthsIndex: 4, chromaticIndex: 4 },\n  B: { noteName: 'B', fifthsIndex: 5, chromaticIndex: 11 },\n  'F#': { noteName: 'F#', fifthsIndex: 6, chromaticIndex: 6 },\n  'C#': { noteName: 'C#', fifthsIndex: 7, chromaticIndex: 1 },\n  Ab: { noteName: 'Ab', fifthsIndex: 8, chromaticIndex: 8 },\n  Eb: { noteName: 'Eb', fifthsIndex: 9, chromaticIndex: 3 },\n  Bb: { noteName: 'Bb', fifthsIndex: 10, chromaticIndex: 10 },\n  F: { noteName: 'F', fifthsIndex: 11, chromaticIndex: 5 },\n}\n\nexport const KEY_NAME_RADIUS = 200\nexport const CANVAS_HEIGHT = 500,\n  CANVAS_WIDTH = 500\nconst COLORS = {\n  text: '#bdc3c7',\n  line: '#2ecc71',\n  canvas: '#2c3e50',\n}\n\nexport const CIRCLE_NOTES_DATA = Object.values(CIRCLE_NOTES_DATA_BY_NOTE).map(\n  (d) => {\n    const [x, y] = getCoordsFromIndex(d.fifthsIndex, 200)\n    return {\n      ...d,\n      x,\n      y,\n      color: COLORS.text,\n    }\n  },\n)\n","import styled from 'styled-components'\nimport { scaleBand } from 'd3-scale'\nimport { range } from 'd3-array'\nimport { arc as d3arc } from 'd3-shape'\nimport { CANVAS_HEIGHT, CANVAS_WIDTH, CIRCLE_NOTES_DATA } from './constants'\nimport { SCALE_NOTES_BY_KEY } from '../use-derived-state'\nimport {\n  useBassNote,\n  useTrebleExtent,\n  useTrebleNotes,\n} from '../InputStateContext'\nimport { getNoteObjectFromMidiNumber } from '../useMIDIInput'\n\nconst KEY_INDEXES = range(0, 12)\n\nconst KEY_CENTER_ARC_INNER_RADIUS = 170 // DUPLICATE: I just copy pasta-ed to skip an imports error\nconst MIN_RADIUS = 20\nconst MAX_RADIUS = KEY_CENTER_ARC_INNER_RADIUS\n\nconst noteAngleBandScale = scaleBand()\n  .domain(KEY_INDEXES)\n  .range([0, 2 * Math.PI])\n  .paddingInner(0.05)\n  .paddingOuter(0.05)\n\nconst getNoteStartAndEndAngles = (noteIndex) => {\n  const bandwidth = noteAngleBandScale.bandwidth()\n  const startAngle = noteAngleBandScale(noteIndex) - bandwidth / 2\n  const endAngle = startAngle + bandwidth\n  return { startAngle, endAngle }\n}\n\nconst useNoteRadii = (noteNum) => {\n  const { trebleMin, trebleMax } = useTrebleExtent()\n  const noteRadiusBandScale = scaleBand()\n    .domain(range(trebleMin.noteNum, trebleMax.noteNum + 1))\n    .range([MIN_RADIUS, MAX_RADIUS])\n    .paddingInner(0.05)\n\n  const innerRadius = noteRadiusBandScale(noteNum)\n  const outerRadius = innerRadius + noteRadiusBandScale.bandwidth()\n  return { innerRadius, outerRadius }\n}\n\nconst arcGenerator = d3arc()\nconst useNoteStyle = (noteNum, noteIndex) => {\n  const trebleNotes = useTrebleNotes()\n  const selected = trebleNotes.some(\n    (trebleNote) => trebleNote.noteNum === noteNum,\n  )\n  const keyNoteName = CIRCLE_NOTES_DATA[noteIndex].noteName\n  const noteIsInThisKey = SCALE_NOTES_BY_KEY[keyNoteName].includes(\n    getNoteObjectFromMidiNumber(noteNum).noteName,\n  )\n\n  const bassNote = useBassNote()\n  const noteIssSelectedButNotInKey = selected && !noteIsInThisKey\n  if (selected) {\n    const bassNoteMatchesKey =\n      bassNote.noteName === CIRCLE_NOTES_DATA[noteIndex].noteName\n    if (bassNoteMatchesKey) {\n      // We're assuming you're building your chord (treble notes) relative to your bass note, so highlight the notes in that key arc\n      return { noteIssSelectedButNotInKey, opacity: 1 }\n    }\n    return { noteIssSelectedButNotInKey, opacity: noteIsInThisKey ? 0.4 : 0.1 }\n  }\n\n  // If not selected, we make the note slightly more visible if its in the key\n  return { noteIssSelectedButNotInKey, opacity: noteIsInThisKey ? 0.05 : 0.01 }\n}\n\nconst SingleNoteArcForAKeyPath = styled.path`\n  fill: ${({ theme, noteIssSelectedButNotInKey }) =>\n    noteIssSelectedButNotInKey\n      ? theme.highlights.hot\n      : theme.highlights.bright};\n`\n\nconst SingleNoteArcForAKey = ({\n  noteIndex,\n  innerRadius,\n  outerRadius,\n  noteNum,\n}) => {\n  const { noteIssSelectedButNotInKey, opacity } = useNoteStyle(\n    noteNum,\n    noteIndex,\n  )\n  const { startAngle, endAngle } = getNoteStartAndEndAngles(noteIndex)\n  const arcD = arcGenerator({\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n  })\n\n  return (\n    <SingleNoteArcForAKeyPath\n      transform={`translate(${CANVAS_WIDTH / 2}, ${CANVAS_HEIGHT / 2})`}\n      d={arcD}\n      opacity={opacity}\n      noteIssSelectedButNotInKey={noteIssSelectedButNotInKey}\n    />\n  )\n}\n\nconst NoteArcsForASingleNote = ({ noteNum }) => {\n  const { innerRadius, outerRadius } = useNoteRadii(noteNum)\n  return KEY_INDEXES.map((noteIndex) => (\n    <SingleNoteArcForAKey\n      key={noteIndex}\n      innerRadius={innerRadius}\n      outerRadius={outerRadius}\n      noteIndex={noteIndex}\n      noteNum={noteNum}\n    />\n  ))\n}\n\nconst NoteArcs = () => {\n  const { trebleMin, trebleMax } = useTrebleExtent()\n  const noteNums = range(trebleMin.noteNum, trebleMax.noteNum + 1)\n  return (\n    <g>\n      {noteNums.map((noteNum) => (\n        <NoteArcsForASingleNote key={noteNum} noteNum={noteNum} />\n      ))}\n    </g>\n  )\n}\n\nexport default NoteArcs\n","import styled from 'styled-components'\nimport {\n  useBassNote,\n  useTrebleExtent,\n  useUpdateInputState,\n} from '../InputStateContext'\nimport { CIRCLE_NOTES_DATA } from './constants'\n\nconst CoFNoteText = styled.text`\n  fill: ${({ theme }) => theme.primary.medium};\n  opacity: ${({ selected }) => (selected ? 1 : 0.6)};\n  font-size: ${({ selected }) => (selected ? '24px' : '20px')};\n  cursor: pointer;\n`\nexport const CoFLetters = () => {\n  const bassNote = useBassNote()\n  const updateInputState = useUpdateInputState()\n  const { trebleMin } = useTrebleExtent()\n  return (\n    <g>\n      {CIRCLE_NOTES_DATA.map(({ x, y, noteName }) => (\n        <g key={noteName} transform={`translate(${x},${y})`}>\n          <CoFNoteText\n            onClick={() =>\n              updateInputState((draft) => {\n                // TODO: TEMPORARY hacky, data not fully true...\n                draft.bassNote = {\n                  noteNum: 0,\n                  noteName,\n                  octave: trebleMin.octave - 1,\n                }\n              })\n            }\n            selected={bassNote.noteName === noteName}\n          >\n            {noteName}\n          </CoFNoteText>\n        </g>\n      ))}\n    </g>\n  )\n}\n","import styled, { useTheme } from 'styled-components'\nimport { arc as d3arc } from 'd3-shape'\nimport { useKeyCenterArcAngles } from '../use-derived-state'\nimport { KEY_NAME_RADIUS, CANVAS_WIDTH, CANVAS_HEIGHT } from './constants'\n\nconst KEY_CENTER_ARC_OUTER_RADIUS = KEY_NAME_RADIUS - 20\nconst KEY_CENTER_ARC_WIDTH = 10\nconst KEY_CENTER_ARC_INNER_RADIUS =\n  KEY_CENTER_ARC_OUTER_RADIUS - KEY_CENTER_ARC_WIDTH\nconst arcGenerator = d3arc()\n\nconst StyledPath = styled.path`\n  transform: rotate(${({ rotation }) => rotation}rad)\n    translate(${CANVAS_WIDTH / 2}px, ${CANVAS_HEIGHT / 2}px);\n  transition: 0.5s transform;\n  transform-origin: ${CANVAS_WIDTH / 2}px ${CANVAS_HEIGHT / 2}px;\n`\n\nexport const KeyCenterArc = () => {\n  const theme = useTheme()\n  const { startAngle, endAngle } = useKeyCenterArcAngles()\n  const noKeysMatch = [startAngle, endAngle].includes(undefined)\n\n  if (noKeysMatch) {\n    return null\n  }\n  const arcD = arcGenerator({\n    innerRadius: KEY_CENTER_ARC_INNER_RADIUS,\n    outerRadius: KEY_CENTER_ARC_OUTER_RADIUS,\n    startAngle: 0,\n    endAngle: endAngle - startAngle,\n  })\n\n  const rotation =\n    startAngle >= Math.PI ? -(2 * Math.PI - startAngle) : startAngle\n  return (\n    <StyledPath\n      rotation={rotation}\n      transform={`translate(${CANVAS_WIDTH / 2}, ${CANVAS_HEIGHT / 2})`}\n      d={arcD}\n      fill={theme.secondary.cool}\n      opacity={1}\n    ></StyledPath>\n  )\n}\n","import styled from 'styled-components'\nimport NoteArcs from './NoteArcs'\nimport { CoFLetters } from './CoFNoteText'\nimport { KeyCenterArc } from './KeyCenterArc'\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from './constants'\n\nconst SVGContainer = styled.svg`\n  background-color: ${({ theme }) => theme.neutral.dark};\n`\nconst CircleOfFifthsViz = () => (\n  <div>\n    <SVGContainer height={CANVAS_HEIGHT} width={CANVAS_WIDTH}>\n      <CoFLetters />\n      <NoteArcs />\n      <KeyCenterArc />\n    </SVGContainer>\n  </div>\n)\n\nexport default CircleOfFifthsViz\n","import { useState } from 'react'\nimport { useUpdateInputState } from '../InputStateContext'\nimport { SubTitle } from '../App'\n\nconst SAMPLE_TREBLE_NOTES = [\n  [\n    { noteName: 'E', octave: 5, noteNum: 76 },\n    { noteName: 'F', octave: 5, noteNum: 77 },\n  ],\n  [\n    { noteName: 'C', octave: 5, noteNum: 72 },\n    { noteName: 'E', octave: 5, noteNum: 76 },\n    { noteName: 'G', octave: 5, noteNum: 79 },\n    { noteName: 'Bb', octave: 5, noteNum: 81 },\n  ],\n  [\n    { noteName: 'C', octave: 5, noteNum: 72 },\n    { noteName: 'Eb', octave: 5, noteNum: 75 },\n    { noteName: 'G', octave: 5, noteNum: 79 },\n    { noteName: 'Bb', octave: 5, noteNum: 81 },\n  ],\n  [\n    { noteName: 'C', octave: 5, noteNum: 72 },\n    { noteName: 'E', octave: 5, noteNum: 76 },\n    { noteName: 'G', octave: 5, noteNum: 79 },\n  ],\n  [\n    { noteName: 'C', octave: 5, noteNum: 72 },\n    { noteName: 'Eb', octave: 5, noteNum: 75 },\n    { noteName: 'G', octave: 5, noteNum: 79 },\n  ],\n]\n\nconst SAMPLE_BASS_NOTES = [\n  { noteName: 'F', octave: 3, noteNum: 53 },\n  { noteName: 'F#', octave: 3, noteNum: 54 },\n  { noteName: 'G', octave: 3, noteNum: 55 },\n  { noteName: 'Ab', octave: 3, noteNum: 56 },\n  { noteName: 'A', octave: 3, noteNum: 57 },\n  { noteName: 'Bb', octave: 3, noteNum: 58 },\n  { noteName: 'B', octave: 3, noteNum: 59 },\n  { noteName: 'C', octave: 4, noteNum: 60 },\n  { noteName: 'C#', octave: 4, noteNum: 61 },\n  { noteName: 'D', octave: 4, noteNum: 62 },\n  { noteName: 'Eb', octave: 4, noteNum: 63 },\n  { noteName: 'E', octave: 4, noteNum: 64 },\n]\n\nconst DevControls = () => {\n  const updateInputState = useUpdateInputState()\n  const [trebleIndex, setTrebledIndex] = useState(null)\n  const [bassIndex, setBassIndex] = useState(null)\n  return (\n    <div>\n      <SubTitle>Select Treble notes:</SubTitle>\n      {SAMPLE_TREBLE_NOTES.map((trebleNotes, i) => (\n        <button\n          key={i}\n          onClick={() => {\n            setTrebledIndex(i)\n            updateInputState((draft) => {\n              draft.trebleNotes = trebleNotes\n            })\n          }}\n          style={{ opacity: trebleIndex === i ? 1 : 0.7 }}\n        >\n          {`Make note ${trebleNotes\n            .map(({ noteName }) => noteName)\n            .toString()}`}\n        </button>\n      ))}\n\n      <SubTitle>Select Bass note:</SubTitle>\n      {SAMPLE_BASS_NOTES.map((bassNote, i) => (\n        <button\n          key={bassNote.noteName}\n          onClick={() => {\n            setBassIndex(i)\n            updateInputState((draft) => {\n              draft.bassNote = bassNote\n            })\n          }}\n          style={{ opacity: bassIndex === i ? 1 : 0.7 }}\n        >\n          {`Make note ${bassNote.noteName}`}\n        </button>\n      ))}\n    </div>\n  )\n}\n\nexport default DevControls\n","import { ThemeProvider, createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${({ theme }) => theme.neutral.dark};\n    font-family: 'Karla', sans-serif;\n    color: ${({ theme }) => theme.neutral.light};\n  }\n`\n\nconst DEFAULT_THEME = {\n  primary: {\n    dark: '#5146D9',\n    medium: '#9D70FC',\n    light: '#BDA1F6',\n  },\n  secondary: {\n    cool: '#95CEE0',\n  },\n  highlights: {\n    hot: '#FF6D3F',\n    bright: '#FFEC3F',\n  },\n  neutral: {\n    dark: '#1D1763',\n    medium: '#8A87AC',\n    light: '#F0F0F0',\n  },\n}\n\nconst ThemeContext = ({ children }) => {\n  return (\n    <ThemeProvider theme={DEFAULT_THEME}>\n      <GlobalStyle /> {children}\n    </ThemeProvider>\n  )\n}\n\nexport default ThemeContext\n","import styled from 'styled-components'\nimport CircleOfFifthsViz from './components/CirlceOfFifthsViz'\nimport DevControls from './components/DevControls'\nimport InputStateContextProvider from './InputStateContext'\nimport ThemeContext from './ThemeContext'\n\nconst HeaderText = styled.h1`\n  color: ${({ theme }) => theme.neutral.medium};\n`\n\nexport const SubTitle = styled.h3`\n  color: ${({ theme }) => theme.neutral.medium};\n`\nexport const BlueHighlightedText = styled.span`\n  color: ${({ theme }) => theme.neutral.dark};\n  background-color: ${({ theme }) => theme.secondary.cool};\n`\n\nconst App = () => {\n  return (\n    <InputStateContextProvider>\n      <ThemeContext>\n        <div>\n          <header>\n            <HeaderText>Circle of Fifths Viz</HeaderText>\n            The <BlueHighlightedText>\n              Blue Key Center arc\n            </BlueHighlightedText>{' '}\n            highlights the (major) key centers your chord could belong within\n            (if any)\n          </header>\n          <DevControls />\n          <CircleOfFifthsViz />\n        </div>\n      </ThemeContext>\n    </InputStateContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}